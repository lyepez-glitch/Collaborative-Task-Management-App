// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
    id String @id @default(uuid())
    username String @unique
    password String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    firstName String? @db.VarChar(255)
    lastName String? @db.VarChar(255)
    role String? @db.VarChar(255)
    profileImage String?
    tasksAssigned Task[] @relation("TasksAssigned")
    projectsOwned Project[] @relation("ProjectsOwned")
    activities Activity[]
    tasksCreated Task[] @relation("TasksCreated")
}

model Task {
    id String @id @default(uuid())
    title String
    description String?
    status String?
    dueDate DateTime?
    priority String?
    assignedTo User @relation("TasksAssigned", fields: [assignedToId], references: [id])
    assignedToId String
    createdBy User? @relation("TasksCreated", fields: [createdById], references: [id])
    createdById String?
    project Project? @relation(fields: [projectId], references: [id])
    projectId String?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    activities Activity[]

}

model Project {
    id String @id @default(uuid())
    name String
    description String
    createdBy User @relation("ProjectsOwned", fields: [createdById], references: [id])
    createdById String
    startDate DateTime
    endDate DateTime?
    status String
    tasks Task[]
    activities Activity[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Activity {
    id String @id @default(uuid())
    activityType String
    description String
    createdBy User @relation(fields: [createdById], references: [id])
    createdById String
    task Task? @relation(fields: [taskId], references: [id])
    taskId String?
    project Project? @relation(fields: [projectId], references: [id])
    projectId String?
        createdAt DateTime @default(now())
}